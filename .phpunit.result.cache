C:37:"PHPUnit\Runner\DefaultTestResultCache":9640:{a:2:{s:7:"defects";a:1:{s:91:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::logTransactionWithFormRequest";i:4;}s:5:"times";a:79:{s:113:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::fixedDebugLevelForAllValues with data set #0";d:0.003;s:113:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::fixedDebugLevelForAllValues with data set #1";d:0;s:113:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::fixedDebugLevelForAllValues with data set #2";d:0;s:113:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::fixedDebugLevelForAllValues with data set #3";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #0";d:0.004;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #1";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #2";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #3";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #4";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #5";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #6";d:0;s:149:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::executeRequestWithVariousResponseStatusCodesAndHttpErrorToFalse with data set #7";d:0;s:109:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::logTransactionWhenRequestExceptionOccurs";d:0;s:110:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\FixedStrategyTest::logTransactionWhenTransferExceptionOccurs";d:0;s:106:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\StatusCodeStrategyTest::logTransactionWithNoCustomLevels";d:0;s:115:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\StatusCodeStrategyTest::logTransactionWhenTransferExceptionOccurs";d:0;s:103:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\StatusCodeStrategyTest::logTransactionWithCustomLevel";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #0";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #1";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #2";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #3";d:0.003;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #4";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #5";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #6";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #7";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #8";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #9";d:0;s:118:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::fixedDebugLevelForAllValues with data set #10";d:0;s:121:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::strategyWorksCorrectlyWhenHttpErrorsIsSetToFalse";d:0;s:131:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::strategyWorksCorrectlyWhenExceptionsOnlyIsSetDuringRequest";d:0;s:98:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::logTransactionWith4xxCode";d:0;s:98:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::logTransactionWith5xxCode";d:0;s:117:"GuzzleLogMiddleware\Test\Handler\LogLevelStrategy\ThresholdStrategyTest::logTwoTransactionOneWith4xxAndOneWith5xxCode";d:0;s:100:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::handlerWorksNormalForAllPossibleValues";d:0;s:113:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::doNotLogRequestOrResponseBodyBecauseOfSensitiveData";d:0;s:92:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::logTransactionWithJsonResponse";d:0;s:95:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::logTransactionWithJsonApiResponse";d:0;s:96:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::logTransactionWithHugeResponseBody";d:0;s:76:"GuzzleLogMiddleware\Test\Handler\StringHandlerTest::logSuccessfulTransaction";d:0;s:83:"GuzzleLogMiddleware\Test\Handler\StringHandlerTest::handlerWillLogAllPossibleValues";d:0;s:76:"GuzzleLogMiddleware\Test\Handler\StringHandlerTest::handlerWillRecordRequest";d:0;s:77:"GuzzleLogMiddleware\Test\Handler\StringHandlerTest::handlerWithValueException";d:0;s:81:"GuzzleLogMiddleware\Test\Handler\StringHandlerTest::handlerWithValueTransferStats";d:0;s:68:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logSuccessfulTransaction";d:0;s:98:"GuzzleLogMiddleware\Test\LogMiddlewareTest::doNotLogOnSuccessfulTransactionWhenOnFailureOnlyIsTrue";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #0";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #1";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #2";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #3";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #4";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #5";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #6";d:0;s:100:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsFalse with data set #7";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #0";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #1";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #2";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #3";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #4";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #5";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #6";d:0;s:99:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithWhenHttpErrorsIsTrue with data set #7";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #0";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #1";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #2";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #3";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #4";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #5";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #6";d:0;s:89:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatistics with data set #7";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #0";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #1";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #2";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #3";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #4";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #5";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #6";d:0;s:113:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWithStatisticsTrueAndExceptionOnlyTrue with data set #7";d:0;s:85:"GuzzleLogMiddleware\Test\LogMiddlewareTest::logTransactionWhenTransferExceptionOccurs";d:0;s:91:"GuzzleLogMiddleware\Test\Handler\MultiRecordArrayHandlerTest::logTransactionWithFormRequest";d:0.071;}}}